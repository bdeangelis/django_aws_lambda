{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "AppLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/django-aws-lambda-production-app"
      }
    },
    "AppLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "django-lambda-bucket-deploy",
          "S3Key": "serverless/django-aws-lambda/production/1629724705302-2021-08-23T13:18:25.302Z/app.zip"
        },
        "Handler": "wsgi_handler.handler",
        "Runtime": "python3.8",
        "FunctionName": "django-aws-lambda-production-app",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "production",
            "DB_HOST": "lambda-django.crso8uvf2m8c.us-east-1.rds.amazonaws.com",
            "DB_USER": "postgres",
            "DB_PASSWORD": "Posts13na216!",
            "DB_NAME": "django_lambda",
            "DJANGO_SECRET_KEY": "django-insecure-0tt6@)qvw8%m0*5v5*^7m^4coo-)mlzbv#j(o_4gdoy119u+qf",
            "AWS_S3_CDN_DOMAIN": "https://d3tnx8750p2drf.cloudfront.net",
            "AWS_S3_REGION_NAME": "us-east-1",
            "AWS_STORAGE_BUCKET_NAME": "django-lambda-static-storage-bucket",
            "DEPLOYMENT_BUCKET": "django-lambda-bucket-deploy",
            "AWS_KEY_ID": "AKIAVACRTKEZYBPKCBM3",
            "AWS_SECRET": "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",
            "DJANGO_ADMIN_URL": "admin",
            "DJANGO_ALLOWED_HOSTS": "['xtsytyci28.execute-api.us-east-1.amazonaws.com']",
            "SECURITY_GROUPS": "sg-43edec5d",
            "SUBNETS": "['subnet-8114e5cd','subnet-fb13329d','subnet-929eb2b3','subnet-6bc8d365','subnet-a81537f7','subnet-579fea66']"
          }
        },
        "Role": "arn:aws:iam::343768518963:role/exec_lambda",
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-43edec5d"
          ],
          "SubnetIds": [
            "subnet-8114e5cd",
            "subnet-fb13329d",
            "subnet-929eb2b3",
            "subnet-6bc8d365",
            "subnet-a81537f7",
            "subnet-579fea66"
          ]
        }
      },
      "DependsOn": [
        "AppLogGroup"
      ]
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "django-aws-lambda-production",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AppLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AppLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProxyVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AppLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AppLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1629724670091": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "production"
      },
      "DependsOn": [
        "ApiGatewayMethodAny",
        "ApiGatewayMethodProxyVarAny"
      ]
    },
    "AppLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AppLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "django-lambda-bucket-deploy",
      "Export": {
        "Name": "sls-django-aws-lambda-production-ServerlessDeploymentBucketName"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/production"
          ]
        ]
      },
      "Export": {
        "Name": "sls-django-aws-lambda-production-ServiceEndpoint"
      }
    }
  }
}